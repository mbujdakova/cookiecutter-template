[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.license}}"
readme = 'README.md'
keywords = ["python"]
classifiers = ['License :: OSI Approved :: {{cookiecutter.license}} License', 'Programming Language :: Python :: 3']
packages = [{ include = "{{cookiecutter.project_name}}", from = "src" }]

[tool.poe.tasks]
init = { shell = "pre-commit install --install-hooks -t commit-msg -t pre-push -t pre-commit" }
add = { shell = "poetry add" }
install = { shell = "poetry install" }
build = { shell = "poetry build" }
clean = { shell = "rm -R ./dist .pytest_cache .mypy_cache &> /dev/null" }

isort = { shell = "poetry run isort ./src" }
black = { shell = "poetry run black ./src/" }
mypy = { shell = "poetry run mypy ./src/" }
flake8 = {shell = "poetry run pflake8 ./src/"}
lint = { shell = """poetry run isort ./src && echo '\nBlack:' && poetry run black ./src/ && echo '\nMyPy:' && poetry run mypy ./src/ && echo '\nFlake8:' && poetry run pflake8 ./src/ && poetry run pymarkdownlint """}


[tool.poetry.dependencies]
python = "^3.9"


[tool.poetry.dev-dependencies]
# Code Scanning and Formatting
black = { version = "*", allow-prereleases = true }
mypy = "^0.942"
pyproject-flake8 = "*"

# Task Runner
poethepoet = "*"